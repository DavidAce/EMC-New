Compilation :   Use " make " to generate the binary "EMC". 
                Use " make clean " to clean old object files.


Excecution  :   Use " EMC [file0] [file1] [...] [fileN] " to execute the 
                binary EMC with the listed input files.
                Put your input files in a folder "./indata/. 
                
                Example: EMC my_file1.dat my_file2.dat boundaries.dat

                The file run.sh is a bash script that helps with this.
                 
                
File format:    Files can contain tab-delimited matrices of size n x m
                (n = rows, m = columns).
                A matrix from [file0] is accessible from within the 
                program in side as  in.data[0]  , which is a pointer to
                an Eigen-type matrix, MatrixXd.
    
                Example:    To get element in row 2 and column 5 from 
                            [file1], you may write:
                
                            double my_number = in.data[1](2,5);
                       
                See the Quick Reference to Eigen syntax here:
                https://eigen.tuxfamily.org/dox-devel/AsciiQuickReference.txt
            
             

                The last argument [fileN] must always contain the domain
                boundary in two columns. The first column is the lower 
                bound, and the second is the upper bound.
                There must be as many rows as parameters for the fit!

                Example: If parameters sigma, mu, rho are to be minimized
                in a 3D cube parameter space. Then boundaries.dat may 
                contain (tab delimited):
                        
                        -1  3.5
                        10  20
                        2   5


Constants:      See the file "constants.h". In particular, the 
                variable "int generations" controls the maximum duration
                of the simulation (default 500000).